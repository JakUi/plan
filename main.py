# Generated by Selenium IDE
import pytest
import time
import json
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.common.action_chains import ActionChains
from selenium.webdriver.support import expected_conditions
from selenium.webdriver.support.wait import WebDriverWait
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.common.desired_capabilities import DesiredCapabilities


class TestMain():
  def setup_method(self, method):
    self.driver = webdriver.Chrome()
    self.vars = {}
  
  def teardown_method(self, method):
    self.driver.quit()
  
  def test_main(self):
    # Test name: main
    # Step # | name | target | value
    # 1 | open | / | 
    self.driver.get("https://temp-mail.org/ru")
    time.sleep(20)
    self.driver.find_element(By.CSS_SELECTOR, ".btn-rds:nth-child(1) > svg").click()
    time.sleep(2)
    self.driver.execute_script("window.open('','_blank');")
    # переключиться на новую вкладку (с индексом 1)
    self.driver.switch_to.window(self.driver.window_handles[1])

    self.driver.get("https://planoplan.com/")
    # 2 | setWindowSize | 1307x1000 | 
    self.driver.set_window_size(1307, 1000)
    time.sleep(10)
    # 3 | click | css=.widget-button__ButtonText-sc-7ezmr3-4 | 
    self.driver.find_element(By.LINK_TEXT, "Войти").click()
    # 4 | click | css=*[data-test="button_signup"] | 
    time.sleep(4)
    self.driver.find_element(By.CSS_SELECTOR, "*[data-test=\"button_signup\"]").click()
    # 6 | type | name=username | wihit92368@ermailo.com
    self.driver.find_element(By.NAME, "username").send_keys(Keys.CONTROL + "v")
    # 7 | click | css=.ipRijx | 
    self.driver.find_element(By.CSS_SELECTOR, ".ipRijx").click()
    # 8 | type | css=.ipRijx | SlozhnyParol19
    self.driver.find_element(By.CSS_SELECTOR, ".ipRijx").send_keys("SlozhnyParol19")
    # 9 | click | css=*[data-test="signup_submit"] | 
    time.sleep(3)
    self.driver.find_element_by_xpath("//*[@class='buttonLoader__View-hkgzw7-0 iWHvdP']").click()
    # 10 | mouseOver | css=*[data-test="signup_submit"] | 
    
    self.driver.switch_to.window(self.driver.window_handles[0])
    time.sleep(30)
    target =  self.driver.find_element_by_xpath("/html/body/main/div[1]/div/div[3]/div[2]/div/div[1]/div/div[1]")
    target.location_once_scrolled_into_view
    self.driver.find_element(By.CSS_SELECTOR, "li:nth-child(2) .inboxSenderName").click()
    code = self.driver.find_element_by_xpath('/html/body/main/div[1]/div/div[3]/div[2]/div/div[1]/div/div[2]/div[3]/table/tbody/tr/td/table/tbody/tr/td/div[4]').text
    time.sleep(3)
    self.driver.switch_to.window(self.driver.window_handles[1])   
    time.sleep(3)
    self.driver.find_element_by_xpath("//*[@id='form-entry']/div/form/fieldset/label/div[2]/input").send_keys(code)
    time.sleep(300)
    '''
        element = self.driver.find_element(By.CSS_SELECTOR, "*[data-test=\"signup_submit\"]")
    actions = ActionChains(self.driver)
    actions.move_to_element(element).perform()
    # 11 | mouseOut | css=*[data-test="signup_submit"] | 
    element = self.driver.find_element(By.CSS_SELECTOR, "body")
    actions = ActionChains(self.driver)
    actions.move_to_element(element, 0, 0).perform()
    # 12 | click | name=code | 
    self.driver.find_element(By.NAME, "code").click()
    # 13 | type | name=code | 710413
    self.driver.find_element(By.NAME, "code").send_keys("710413")
    # 14 | click | css=.buttonLoader__View-hkgzw7-0 | 
    self.driver.find_element(By.CSS_SELECTOR, ".buttonLoader__View-hkgzw7-0").click()
    # 15 | click | css=.modal__CloseButton-sc-1iesfw0-0 > svg | 
    self.driver.find_element(By.CSS_SELECTOR, ".modal__CloseButton-sc-1iesfw0-0 > svg").click()
    # 16 | click | css=.widget-button__ButtonText-sc-7ezmr3-4 | 
    self.driver.find_element(By.CSS_SELECTOR, ".widget-button__ButtonText-sc-7ezmr3-4").click()
    # 17 | click | css=.ipRijx | 
    self.driver.find_element(By.CSS_SELECTOR, ".ipRijx").click()
    # 18 | type | css=.ipRijx | SlozhnyParol19
    self.driver.find_element(By.CSS_SELECTOR, ".ipRijx").send_keys("SlozhnyParol19")
    # 19 | sendKeys | css=.ipRijx | ${KEY_ENTER}
    self.driver.find_element(By.CSS_SELECTOR, ".ipRijx").send_keys(Keys.ENTER)
'''  
